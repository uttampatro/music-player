{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","data.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","songs","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","className","currentTime","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","chillHop","audio","color","uuidv4","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandler","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e59c0a7e.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\n// import { playAudio } from \"../util\";\n\nconst Player = ({\n    audioRef, \n    currentSong, \n    isPlaying, \n    setIsPlaying, \n    songInfo, \n    setSongInfo, \n    songs, \n    setCurrentSong,\n    setSongs \n}) => {\n    //useEffect\n    useEffect(() =>{\n        //add active song\n        const newSongs = songs.map((song) => {\n            if(song.id === currentSong.id) {\n                return {\n                    ...song,\n                    active: true,\n                };\n            }else{\n                return {\n                    ...song,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n    }, [currentSong])\n   //event handler  \n    const playSongHandler = () => {\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        }else{\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    };\n     \n    const getTime = (time) => {\n        return (\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    }\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime: e.target.value});\n    }\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === 'skip-forward'){\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n        }\n        if (direction === 'skip-back') {\n            if((currentIndex - 1) % songs.length === -1) {\n                await setCurrentSong(songs[songs.length -1]);\n                if(isPlaying) audioRef.current.play();\n                return;\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n        }\n        if(isPlaying) audioRef.current.play();\n    };\n \n    return (\n        <div className = \"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                \n                <input \n                min = {0} \n                max = {songInfo.duration || 0} \n                value = {songInfo.currentTime} \n                onChange = {dragHandler}\n                type=\"range\"/>\n\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon \n                onClick = {() => skipTrackHandler(\"skip-back\") } \n                className = \"skip-back\" \n                size = \"2x\" \n                icon = {faAngleLeft}/>\n                <FontAwesomeIcon \n                onClick = {playSongHandler} \n                className = \"play\" \n                size = \"2x\" \n                icon = {isPlaying ? faPause : faPlay }/>\n                <FontAwesomeIcon \n                onClick = {() => skipTrackHandler(\"skip-forward\") } \n                className = \"skip-forward\" \n                size = \"2x\" \n                icon = {faAngleRight}/>\n            </div>\n             \n        </div>\n    );\n}\n\nexport default Player;","import React from \"react\";\n\nconst Song = ({currentSong}) => {\n    return (\n        <div className = \"song-container\">\n            <img alt = {currentSong.name} src = {currentSong.cover}></img>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    );\n}\n\nexport default Song;","import React from \"react\";\n// import { playAudio } from \"../util\";\n\nconst LibrarySong = ({song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs}) => {\n    const songSelectHandler = async () => {\n        const selectedSong = songs.filter((state) => state.id === id);\n        await setCurrentSong(selectedSong[0]);\n        //add active song\n        const newSongs = songs.map((song) => {\n            if(song.id === id) {\n                return {\n                    ...song,\n                    active: true,\n                };\n            }else{\n                return {\n                    ...song,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n        //check if the song is playing\n        if(isPlaying) audioRef.current.play();\n    };\n    return (\n        <div onClick = {songSelectHandler} className = {`library-song ${song.active ? \"selected\" : \"\" }`}>\n            <img alt = {song.name} src = {song.cover}></img>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n        </div>\n    );\n}\n\nexport default LibrarySong;","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\n    return(\n        <div className = {`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map(song => (\n                    <LibrarySong \n                        songs = {songs} \n                        setCurrentSong = {setCurrentSong} \n                        song = {song}\n                        id = {song.id}\n                        key = {song.id}\n                        audioRef = {audioRef}\n                        isPlaying = {isPlaying}\n                        setSongs = {setSongs}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\nexport default Library;","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n    {\n      name: \"Jazz Cabbage\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg\",\n      artist: \" Ian Ewing, Strehlow \",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9363\",\n      color: [\"#BA4A46\", \"#FDF0DD\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Lagoons\",\n      cover: \n        \"https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg\",\n      artist: \" Strehlow, Chris Mazuera \",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8266\",\n      color: [\"#BA4A46\", \"#FDF0DD\"],\n      id: uuidv4(),\n      active: false,\n    },\n  ];\n}\n\nexport default chillHop;\n","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\"\n\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\n    return(\n        <nav>\n            <h1>Waves</h1>\n            <button onClick = {() => setLibraryStatus(!libraryStatus)}>\n                Library\n                <FontAwesomeIcon icon = {faMusic}/>\n            </button>\n        </nav>\n    );\n}\n\nexport default Nav;","import React, {useRef, useState} from \"react\";\nimport \"./styles/app.scss\"\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport data from \"./data\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  //ref\n  const audioRef = useRef(null);\n  //state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  //state\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({...songInfo, currentTime: current, duration});\n  }\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if(isPlaying) audioRef.current.play();\n        \n  }\n  return (\n    <div className= {`App ${libraryStatus ? 'library-active' : \"\"}`}>\n       {/* <h1>Music Player</h1> */}\n       <Nav libraryStatus = {libraryStatus} setLibraryStatus = {setLibraryStatus}/>  \n       <Song currentSong = {currentSong}/>\n       <Player \n        isPlaying = {isPlaying}\n        setIsPlaying = {setIsPlaying}\n        currentSong = {currentSong}\n        audioRef = {audioRef}\n        setSongInfo = {setSongInfo}\n        songInfo = {songInfo}\n        songs = {songs}\n        setCurrentSong = {setCurrentSong}\n        setSongs = {setSongs}\n        />\n        <Library \n        audioRef = {audioRef} \n        songs ={songs} \n        setCurrentSong = {setCurrentSong}\n        isPlaying = {isPlaying}\n        setSongs = {setSongs}\n        libraryStatus = {libraryStatus}\n        />\n        <audio \n            onTimeUpdate = {timeUpdateHandler} \n            onLoadedMetadata = {timeUpdateHandler} \n            ref = {audioRef} \n            src= {currentSong.audio}\n            onEnded = {songEndHandler}\n        ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\n \nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}